{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { io } from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ChatboxService = /*#__PURE__*/(() => {\n  class ChatboxService {\n    constructor(http) {\n      this.http = http;\n      this.enable = false;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Access-Control-Allow-Origin': '*'\n        })\n      };\n      this.socket = io('ws://localhost:8000', {\n        transports: ['websocket']\n      });\n    }\n\n    listen() {\n      return new Observable(subscriber => {\n        this.socket.on(\"toAdmin\", client => {\n          subscriber.next(client); // this.emit(client);\n        });\n      });\n    }\n\n    emit(client) {\n      this.socket.emit(\"toAdmin\", client);\n    }\n\n    sendMessage(text) {\n      return this.http.post(environment.backend.requestTextUrl, text, this.httpOptions);\n    }\n\n    getPrice() {\n      return this.http.get(environment.backend2.requestTextUrl);\n    }\n\n  }\n\n  ChatboxService.ɵfac = function ChatboxService_Factory(t) {\n    return new (t || ChatboxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChatboxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatboxService,\n    factory: ChatboxService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatboxService;\n})();","map":null,"metadata":{},"sourceType":"module"}