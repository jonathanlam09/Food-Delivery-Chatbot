{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbox.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../text/text.component\";\n\nfunction ChatboxComponent_div_1_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatboxComponent_div_1_div_2_div_2_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return ctx_r8.checked[i_r5] = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"p\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const list_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const isfirst_r6 = ctx.first;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"first\", isfirst_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"checkbox\" + (i_r5 + 1));\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.checked[i_r5])(\"id\", \"checkbox\" + (i_r5 + 1))(\"name\", \"checkbox\" + (i_r5 + 1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"checkboxtext\" + (i_r5 + 1));\n    i0.ɵɵproperty(\"id\", \"checkboxtext\" + (i_r5 + 1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(list_r4);\n  }\n}\n\nfunction ChatboxComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtemplate(2, ChatboxComponent_div_1_div_2_div_2_Template, 4, 11, \"div\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵelementStart(4, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ChatboxComponent_div_1_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.order();\n    });\n    i0.ɵɵtext(5, \"order\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.lists);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"left-message\": a0,\n    \"right-message\": a1\n  };\n};\n\nfunction ChatboxComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"app-text\", 6);\n    i0.ɵɵtemplate(2, ChatboxComponent_div_1_div_2_Template, 6, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colorBackRight\", ctx_r0.colorBackRight)(\"colorFontRight\", ctx_r0.colorFontRight)(\"colorBackLeft\", ctx_r0.colorBackLeft)(\"colorFontLeft\", ctx_r0.colorFontLeft)(\"owner\", message_r1.userOwner)(\"text\", message_r1.text)(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, !message_r1.userOwner, message_r1.userOwner));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r1.visible);\n  }\n}\n\nexport let ChatboxComponent = /*#__PURE__*/(() => {\n  class ChatboxComponent {\n    constructor(chatboxService) {\n      this.chatboxService = chatboxService;\n      this.lists = [];\n      this.BACK_ENABLED = true;\n      this.visible = false;\n      this.checked = [];\n      this.pricelist = [];\n      this.textInput = \"\";\n      this.i = 0;\n      this.name = \"Jonathan\";\n      this.chatboxService.listen().subscribe(client => {\n        let socket_server = {\n          text: client,\n          userOwner: false,\n          visible: false\n        };\n        this.messages.push(socket_server);\n        console.log(client);\n      });\n    } //Run when document ready\n\n\n    ngOnInit() {\n      if (this.BACK_ENABLED) {\n        this.chatboxService.getPrice().subscribe(res => {\n          for (var i = 0; i < res.result.length; i++) {\n            this.pricelist.push(res.result[i]);\n          }\n        });\n      }\n\n      let TextInput = \"Greetings! My name is Dorcas and I am here at your service to satisfy to your food cravings. What do you fancy to have today?\";\n      let messageReturn = {\n        text: TextInput,\n        userOwner: false,\n        visible: false\n      };\n      this.messages.push(messageReturn);\n      let TextInput2 = \"If you would like to start order, please type ORDER.\";\n      let messageReturn2 = {\n        text: TextInput2,\n        userOwner: false,\n        visible: false\n      };\n      this.messages.push(messageReturn2);\n      let TextInput3 = \"If you wish to speak to our live agent, please type LIVECHAT.\";\n      let messageReturn3 = {\n        text: TextInput3,\n        userOwner: false,\n        visible: false\n      };\n      this.messages.push(messageReturn3);\n      let TextInput4 = \"If you wish to end this session, please click the red icon located at the top right side of the chatbot..\";\n      let messageReturn4 = {\n        text: TextInput4,\n        userOwner: false,\n        visible: false\n      };\n      this.messages.push(messageReturn4);\n    } //Send chatbot Input Text to backend\n\n\n    sendMessage() {\n      let TextInput = this.textInput.replace(\"\\n\", \"\");\n      let newMessage = {\n        text: TextInput,\n        userOwner: true,\n        visible: false\n      };\n      this.messages.push(newMessage);\n      console.log(\"//\");\n      console.log(newMessage.text);\n      console.log(\"//\");\n      let messageBack = {\n        text: TextInput\n      };\n\n      if (TextInput.toUpperCase() == \"LIVECHAT\") {\n        this.BACK_ENABLED = false;\n      }\n\n      if (this.BACK_ENABLED == true) {\n        this.chatboxService.sendMessage(messageBack).subscribe(res => {\n          console.log(res);\n\n          if (TextInput.toUpperCase() == \"ORDER\") {\n            this.visible = true;\n            console.log(res.result);\n            this.messages.push({\n              text: \"Please tick the item desire\",\n              userOwner: false,\n              visible: this.visible\n            });\n\n            for (var i = 0; i < res.result.length; i++) {\n              this.lists.push(res.result[i]);\n            }\n          } else {\n            this.visible = false;\n            let messageReturn = {\n              text: res.result.toString().split(\",\").join(\"\"),\n              userOwner: false,\n              visible: this.visible\n            };\n            this.messages.push(messageReturn);\n            console.log(\"//\");\n            console.log(messageReturn.text);\n            console.log(\"//\"); // if (this.lists.length == 0 ){\n            //   this.lists.push(res.result)\n            //   console.log(this.lists);\n            //   console.log(this.lists.length);\n            // }\n          }\n        });\n      } else {\n        if (TextInput.toUpperCase() == \"LIVECHAT\") {\n          this.chatboxService.emit(this.name + \" has joined the chat room.\");\n          setTimeout(() => {\n            let promptMsg1 = {\n              text: \"Hi there, I am Jonathan and I am a live agent. How many I assist you today?\",\n              userOwner: false,\n              visible: false\n            };\n            this.messages.push(promptMsg1);\n            let promptMsg2 = {\n              text: \"If you wish to disconnect from this session, please type END.\",\n              userOwner: false,\n              visible: false\n            };\n            this.messages.push(promptMsg2);\n          }, 3000);\n        } else if (TextInput.toUpperCase() == \"END\") {\n          this.BACK_ENABLED = true;\n          let promptMsg = {\n            text: \"You are no longer connected to our live agent.\",\n            userOwner: false,\n            visible: false\n          };\n          setTimeout(() => {\n            this.messages.push(promptMsg);\n          }, 1000);\n        } else {\n          this.chatboxService.emit(TextInput);\n        }\n      }\n\n      this.textInput = '';\n    } //Trigger sendMessage function on enterkey\n\n\n    onKey(event) {\n      if (event.keyCode == 13) {\n        this.sendMessage();\n      }\n    }\n\n    order() {\n      var totalcheckbox = document.querySelectorAll(\".checkbox\");\n      var checkboxlength = totalcheckbox.length;\n      var string = \"\";\n      var price;\n      var index = 1;\n      var totalprice = 0;\n      var menulisting = \"\";\n      var totalprice_string = \"\";\n      var routing = \"You will be redirected to payment page. Please hold on.\";\n\n      for (var i = 0; i < checkboxlength; i++) {\n        var checkbox = document.getElementById(\"checkboxtext\" + i + 1);\n\n        if (this.checked[i] == true) {\n          string = string + index + \")\" + this.lists[i] + \"\\n\";\n          price = parseInt(this.pricelist[i]);\n          menulisting = menulisting + index + \")\" + this.lists[i] + \"\\nRM\" + price + \"\\n\\n\";\n          totalprice = totalprice + price;\n          index = index + 1;\n        }\n      }\n\n      totalprice_string = menulisting + \"\\n\" + \"The total price is RM\" + totalprice.toString() + \".\\nWould you like to proceed with payment?\"; //If confirm food name\n\n      if (confirm(string)) {\n        //If confirm total price\n        if (confirm(totalprice_string)) {\n          //If confirm to be redirected to payment page\n          if (confirm(routing)) {\n            //Payment Page\n            window.location.href = \"https://www.maybank2u.com.my/home/m2u/common/login.do\";\n          } //cancel order\n          else {\n            window.alert(\"Please visit again.\");\n          }\n        } //cancel order\n        else {\n          window.alert(\"Please visit again.\");\n        }\n      } //Cancel Order\n      else {\n        window.alert(\"Please visit again.\");\n      }\n    }\n\n    endchat() {\n      window.alert(\"ha\");\n      this.BACK_ENABLED = false;\n      let promptMsg1 = {\n        text: \"You are now disconnected from our live agent.\",\n        userOwner: false,\n        visible: false\n      };\n      setTimeout(() => {\n        this.messages.push(promptMsg1);\n      }, 3000);\n    }\n\n  }\n\n  ChatboxComponent.ɵfac = function ChatboxComponent_Factory(t) {\n    return new (t || ChatboxComponent)(i0.ɵɵdirectiveInject(i1.ChatboxService));\n  };\n\n  ChatboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatboxComponent,\n    selectors: [[\"app-chatbox\"]],\n    inputs: {\n      lists: \"lists\",\n      messages: \"messages\",\n      colorBackRight: \"colorBackRight\",\n      colorFontRight: \"colorFontRight\",\n      colorBackLeft: \"colorBackLeft\",\n      colorFontLeft: \"colorFontLeft\",\n      disabled: \"disabled\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"list-messages\"], [\"class\", \"message-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-message\", \"form-group\"], [\"placeholder\", \"Type text here\", 1, \"input-text-message\", \"form-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"keyup\"], [\"aria-hidden\", \"true\", \"src\", \"assets/sendicon.png\", 1, \"input-send\", 3, \"click\"], [1, \"message-container\"], [1, \"message\", 3, \"colorBackRight\", \"colorFontRight\", \"colorBackLeft\", \"colorFontLeft\", \"owner\", \"text\", \"ngClass\"], [\"class\", \"order\", 4, \"ngIf\"], [1, \"order\"], [1, \"order-div\"], [\"class\", \"orderlist order-message  left-content\", 3, \"first\", 4, \"ngFor\", \"ngForOf\"], [1, \"orderbutton\"], [3, \"click\"], [1, \"orderlist\", \"order-message\", \"left-content\"], [\"type\", \"checkbox\", 1, \"checkbox\", 3, \"ngModel\", \"id\", \"name\", \"ngModelChange\"], [1, \"checkboxtext\", 3, \"id\"]],\n    template: function ChatboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ChatboxComponent_div_1_Template, 3, 11, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatboxComponent_Template_textarea_ngModelChange_3_listener($event) {\n          return ctx.textInput = $event;\n        })(\"keyup\", function ChatboxComponent_Template_textarea_keyup_3_listener($event) {\n          return ctx.onKey($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"img\", 4);\n        i0.ɵɵlistener(\"click\", function ChatboxComponent_Template_img_click_4_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.textInput)(\"disabled\", ctx.disabled);\n      }\n    },\n    directives: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.TextComponent, i2.NgClass, i2.NgIf, i3.CheckboxControlValueAccessor],\n    styles: [\".navbar[_ngcontent-%COMP%]{background:cornflowerblue;height:10%;font-size:2vh;font-weight:700;display:flex;justify-content:center;align-items:center;cursor:pointer}.list-messages[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:90%;overflow:auto;background:white;border:none;width:100%}.left-message[_ngcontent-%COMP%]{display:flex;margin-left:2vh;margin-top:2vh;text-align:justify}.right-message[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;margin-right:2vh;margin-top:2vh;text-align:justify}.input-message[_ngcontent-%COMP%]{height:9%;width:100%;background:cornflowerblue;margin:0;padding:0;border-bottom-left-radius:2vh;border-bottom-right-radius:2vh;display:flex;align-items:center;justify-content:space-around}.input-text-message[_ngcontent-%COMP%]{border:none;resize:none;outline:none;width:80%;padding:0;border-radius:2vh;height:85%;margin-left:.2vh;text-indent:2vh}textarea[_ngcontent-%COMP%]{padding-top:2vh}.input-text-message[_ngcontent-%COMP%]::placeholder{font-family:\\\"Trebuchet MS\\\",\\\"Lucida Sans Unicode\\\",\\\"Lucida Grande\\\",\\\"Lucida Sans\\\",Arial,sans-serif}.input-send[_ngcontent-%COMP%]{cursor:pointer;display:flex;justify-content:center;align-items:center;color:#fff;padding:0;height:4vh;width:4vh;margin-right:1vh}.orderlist[_ngcontent-%COMP%]{display:flex;align-items:center;background-color:#ffefd5}.orderlist[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.orderlist[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{display:flex;justify-content:center;align-content:center}.order-message[_ngcontent-%COMP%]{display:flex;margin-left:3vh;padding-top:1vh;padding-bottom:1vh;text-align:justify}.order-div[_ngcontent-%COMP%]{width:90%}.orderbutton[_ngcontent-%COMP%]{background-color:#ffefd5;display:flex;justify-content:center;margin-left:3vh;border-bottom-left-radius:2vh;border-bottom-right-radius:2vh}.first[_ngcontent-%COMP%]{border-top-left-radius:2vh;border-top-right-radius:2vh}.checkbox[_ngcontent-%COMP%]{margin-left:1vh}.checkboxtext[_ngcontent-%COMP%]{margin-left:1vh}.agentdiv[_ngcontent-%COMP%]{display:flex!important;justify-content:center}.liveagent[_ngcontent-%COMP%]{text-align:center;width:80%;border:1px solid black;border-radius:2vh;font-size:.8rem!important;background-color:#d3d3d3}\"]\n  });\n  return ChatboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}